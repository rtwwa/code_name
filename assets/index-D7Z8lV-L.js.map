{"version":3,"file":"index-D7Z8lV-L.js","sources":["../../src/utils/fullscreen.js","../../src/config.js","../../src/app.js","../../src/objects/enemies/turretAR.js","../../src/objects/player/abilities/dash.js","../../src/objects/player/player.js","../../src/scenes/testing_scene.js","../../src/main.js","../../src/utils/background.js"],"sourcesContent":["function resizeGame(kaplay) {\r\n  const gameCanvas = document.querySelector(\"canvas\");\r\n\r\n  const winWidth = window.innerWidth;\r\n  const winHeight = window.innerHeight;\r\n\r\n  const scaleX = Math.floor(winWidth / kaplay.width);\r\n  const scaleY = Math.floor(winHeight / kaplay.height);\r\n  const scale = Math.max(1, Math.min(scaleX, scaleY));\r\n\r\n  gameCanvas.style.width = kaplay.width * scale + \"px\";\r\n  gameCanvas.style.height = kaplay.height * scale + \"px\";\r\n  gameCanvas.style.imageRendering = \"pixelated\";\r\n  gameCanvas.style.position = \"absolute\";\r\n  gameCanvas.style.top = \"50%\";\r\n  gameCanvas.style.left = \"50%\";\r\n  gameCanvas.style.transform = \"translate(-50%, -50%)\";\r\n}\r\n\r\nfunction goFullscreen() {\r\n  const canvas = document.querySelector(\"canvas\");\r\n  if (canvas.requestFullscreen) {\r\n    canvas.requestFullscreen();\r\n  } else if (canvas.webkitRequestFullscreen) {\r\n    canvas.webkitRequestFullscreen();\r\n  }\r\n}\r\n\r\nexport function fullscreenHandler(kaplay) {\r\n  window.addEventListener(\"resize\", resizeGame(kaplay));\r\n  window.addEventListener(\"load\", resizeGame(kaplay));\r\n\r\n  document.addEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"f\") {\r\n      goFullscreen();\r\n    }\r\n  });\r\n}\r\n","export const GAME_WIDTH = 640;\r\nexport const GAME_HEIGHT = 640;\r\n\r\n// 16:9\r\n\r\n// export const COLORS = {\r\n//   background: [56, 43, 38],\r\n//   foreground: [184, 194, 185],\r\n// };\r\n\r\nexport const COLORS = {\r\n  background: [34, 42, 61],\r\n  foreground: [237, 242, 226],\r\n};\r\n","const App = {\r\n  kaplayInstance: null,\r\n  currentScene: null,\r\n\r\n  init(kaplayInstance) {\r\n    this.kaplayInstance = kaplayInstance;\r\n  },\r\n\r\n  addScene(name, sceneFunc) {\r\n    if (!this.kaplayInstance) {\r\n      console.error(\"Kaplay instance не инициализирован\");\r\n      return;\r\n    }\r\n\r\n    this.kaplayInstance.scene(name, sceneFunc);\r\n  },\r\n\r\n  startScene(name) {\r\n    if (!this.kaplayInstance) {\r\n      console.error(\"Kaplay instance не инициализирован\");\r\n      return;\r\n    }\r\n\r\n    this.currentScene = name;\r\n    this.kaplayInstance.go(name);\r\n  },\r\n};\r\n\r\nexport default App;\r\n","import { COLORS } from \"../../config\";\r\n\r\nexport function spawnTurretAR(position, options = {}) {\r\n  const {\r\n    bulletCount = 12,\r\n    bulletSpeed = 150,\r\n    damage = 1,\r\n    shootInterval = 2,\r\n    bulletColor = [COLORS.foreground],\r\n    size = 24,\r\n  } = options;\r\n\r\n  const turret = add([\r\n    rect(size, size),\r\n    pos(position),\r\n    color(COLORS.foreground),\r\n    anchor(\"center\"),\r\n    \"enemy\",\r\n    {\r\n      bulletCount,\r\n      bulletSpeed,\r\n      damage,\r\n      shootInterval,\r\n    },\r\n  ]);\r\n\r\n  function shootCircle() {\r\n    for (let i = 0; i < turret.bulletCount; i++) {\r\n      const angle = (i / turret.bulletCount) * Math.PI * 2;\r\n      const dir = vec2(Math.cos(angle), Math.sin(angle));\r\n\r\n      add([\r\n        circle(8),\r\n        pos(turret.pos),\r\n        color(...bulletColor),\r\n        area(),\r\n        \"bullet\",\r\n        { dir, speed: turret.bulletSpeed, damage: turret.damage },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  loop(turret.shootInterval, () => {\r\n    shootCircle();\r\n  });\r\n\r\n  return turret;\r\n}\r\n\r\nexport function setupBulletLogic(destroyBulletFunc) {\r\n  onUpdate(\"bullet\", (b) => {\r\n    b.move(b.dir.scale(b.speed));\r\n\r\n    destroyBulletFunc(b);\r\n  });\r\n\r\n  onCollide(\"bullet\", \"player\", (bullet, player) => {\r\n    shake(4);\r\n\r\n    destroy(bullet);\r\n    player.hurt(bullet.damage);\r\n  });\r\n}\r\n","const IMPULSE_FORCE = 700;\r\nconst DASH_COOLDOWN = 1.5;\r\n\r\nexport function initDashAbility(player) {\r\n  const dashAbility = add([timer()]);\r\n  let hasDashed = false;\r\n\r\n  dashAbility.useDash = () => {\r\n    if (hasDashed == true) return;\r\n\r\n    hasDashed = true;\r\n    dashAbility.wait(DASH_COOLDOWN, () => {\r\n      hasDashed = false;\r\n    });\r\n\r\n    player.applyImpulse(\r\n      vec2(\r\n        IMPULSE_FORCE * player.lastDirection.x,\r\n        IMPULSE_FORCE * player.lastDirection.y\r\n      )\r\n    );\r\n  };\r\n\r\n  onKeyPress(\"x\", () => {\r\n    dashAbility.useDash(player);\r\n  });\r\n\r\n  return dashAbility;\r\n}\r\n","import { COLORS } from \"../../config\";\r\nimport { initAttachAbility } from \"./abilities/attach\";\r\nimport { initDashAbility } from \"./abilities/dash\";\r\nimport { initHookAbility } from \"./abilities/hook\";\r\nimport { createFootstepEmitter } from \"./particles\";\r\n\r\nconst MAX_HEALTH = 5;\r\nconst SPEED = 250;\r\nconst HERO_COLOR = COLORS.foreground;\r\nconst DRAG = 7;\r\n\r\nexport const spawnPlayer = async (position) => {\r\n  let frames = vec2(12, 2);\r\n\r\n  loadSprite(\"hero\", \"./sprites/all.png\", {\r\n    sliceX: frames.x,\r\n    sliceY: frames.y,\r\n    anims: {\r\n      afk: 0,\r\n      idle: { from: 0, to: 7, loop: true },\r\n      walk: { from: 12, to: 23, loop: true },\r\n    },\r\n  });\r\n\r\n  loadShader(\r\n    \"tint\",\r\n    null,\r\n    `\r\n  precision mediump float;\r\n\r\n  uniform float r;\r\n  uniform float g;\r\n  uniform float b;\r\n  uniform float h;\r\n  uniform vec2 texSize;\r\n  uniform vec2 frameOffset;\r\n  uniform vec2 frameSize;\r\n\r\n  vec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\r\n      vec4 c = texture2D(tex, uv);\r\n\r\n      if (c.a < 0.01) {\r\n          return c;\r\n      }\r\n\r\n      vec2 offsetX = vec2(1.0 / texSize.x, 0.0);\r\n      vec2 offsetY = vec2(0.0, 1.0 / texSize.y);\r\n\r\n      float alphaUp    = texture2D(tex, uv + offsetY).a;\r\n      float alphaDown  = texture2D(tex, uv - offsetY).a;\r\n      float alphaLeft  = texture2D(tex, uv - offsetX).a;\r\n      float alphaRight = texture2D(tex, uv + offsetX).a;\r\n\r\n      if (alphaUp < 0.01 || alphaDown < 0.01 || alphaLeft < 0.01 || alphaRight < 0.01) {\r\n          return vec4(r, g, b, c.a);\r\n      }\r\n\r\n      vec2 pixelCoord = uv * texSize;\r\n      vec2 localPixel = pixelCoord - (frameOffset * texSize);\r\n      vec2 localUV = localPixel / frameSize; // 0..1 по фрейму\r\n\r\n      if (localUV.y <= h) {\r\n          return vec4(1.0, 0.0, 0.0, 0.0);\r\n      }\r\n\r\n      return vec4(r, g, b, c.a);\r\n      }\r\n      `\r\n  );\r\n\r\n  const playerSprite = await getSprite(\"hero\");\r\n\r\n  console.log(playerSprite);\r\n\r\n  const player = add([\r\n    sprite(playerSprite),\r\n    health(MAX_HEALTH, MAX_HEALTH),\r\n    pos(position),\r\n    area({\r\n      shape: new Polygon([\r\n        vec2(-18, 12),\r\n        vec2(10, 12),\r\n        vec2(10, -20),\r\n        vec2(-18, -20),\r\n      ]),\r\n    }),\r\n    body(),\r\n    anchor(vec2(0.2, 0.5)),\r\n    \"player\",\r\n  ]);\r\n\r\n  console.log(player.hp());\r\n\r\n  player.use(\r\n    shader(\"tint\", () => ({\r\n      r: HERO_COLOR.at(0) / 255,\r\n      g: HERO_COLOR.at(1) / 255,\r\n      b: HERO_COLOR.at(2) / 255,\r\n      h: 596 + (1 - player.hp() / player.maxHP()) * 1452,\r\n      texSize: vec2(playerSprite.tex.width, playerSprite.tex.height),\r\n      frameOffset: vec2(\r\n        playerSprite.frames[player.frame].x,\r\n        playerSprite.frames[player.frame].y\r\n      ),\r\n      frameSize: vec2(\r\n        playerSprite.frames[player.frame].w,\r\n        playerSprite.frames[player.frame].h\r\n      ),\r\n    }))\r\n  );\r\n\r\n  onKeyPress(\"space\", () => {\r\n    player.hurt(1);\r\n    console.log(player.maxHP(), player.hp() / player.maxHP());\r\n  });\r\n\r\n  // Player variables\r\n  player.drag = DRAG;\r\n  player.canMove = true;\r\n  player.isMoving = false;\r\n  player.lastDirection = vec2(1, 1);\r\n\r\n  // Player movement\r\n  const moveHandler = () => {\r\n    if (!player.canMove) return;\r\n\r\n    let dirX = 0;\r\n    let dirY = 0;\r\n\r\n    if (isKeyDown(\"left\")) dirX -= 1;\r\n    if (isKeyDown(\"right\")) dirX += 1;\r\n    if (isKeyDown(\"up\")) dirY -= 1;\r\n    if (isKeyDown(\"down\")) dirY += 1;\r\n\r\n    let dir = vec2(dirX, dirY);\r\n    if (dir.len() > 0) {\r\n      dir = dir.unit();\r\n      player.lastDirection = dir;\r\n      player.move(dir.x * SPEED, dir.y * SPEED);\r\n      player.flipX = dir.x < 0;\r\n    }\r\n  };\r\n\r\n  // Abilities\r\n  const dashAbility = initDashAbility(player);\r\n  // const attachAbility = initAttachAbility(player, JUMP_FORCE);\r\n  // const hookAbility = initHookAbility(player);\r\n\r\n  // Physics\r\n  player.onUpdate(() => {\r\n    moveHandler();\r\n\r\n    if (\r\n      (isKeyDown(\"left\") ||\r\n        isKeyDown(\"right\") ||\r\n        isKeyDown(\"up\") ||\r\n        isKeyDown(\"down\")) &&\r\n      player.canMove\r\n    ) {\r\n      player.isMoving = true;\r\n      if (player.curAnim() == \"walk\") return;\r\n\r\n      player.play(\"walk\");\r\n    } else {\r\n      player.isMoving = false;\r\n      if (player.curAnim() == \"idle\") return;\r\n\r\n      player.play(\"afk\");\r\n    }\r\n  });\r\n\r\n  return player;\r\n};\r\n","import { COLORS } from \"../config\";\r\nimport { setupBulletLogic, spawnTurretAR } from \"../objects/enemies/turretAR\";\r\nimport { spawnPlayer } from \"../objects/player/player\";\r\n\r\nexport const test_scene = async () => {\r\n  const PLAYER_START_POS = vec2(width() / 6 + 50, height() - 200);\r\n\r\n  const player = await spawnPlayer(PLAYER_START_POS);\r\n\r\n  const centerPos = vec2(width() / 2, height() / 2);\r\n  const radius = width() / 2 - 16;\r\n  const halfRadiusPlayerModel = 36;\r\n\r\n  add([\r\n    pos(centerPos),\r\n    circle(radius, { fill: false }),\r\n    outline(2, Color.fromArray(COLORS.foreground)),\r\n  ]);\r\n\r\n  player.onUpdate(() => {\r\n    const distFromCenter = player.pos.dist(centerPos);\r\n    if (distFromCenter > radius - halfRadiusPlayerModel) {\r\n      const dir = player.pos.sub(centerPos).unit();\r\n      player.pos = centerPos.add(dir.scale(radius - halfRadiusPlayerModel));\r\n    }\r\n  });\r\n\r\n  const scoreText = add([\r\n    text(\"x -> dash\", { font: \"Tiny\" }),\r\n    pos(20, 20),\r\n    layer(\"ui\"),\r\n  ]);\r\n\r\n  setupBulletLogic((bullet) => {\r\n    const distFromCenter = bullet.pos.dist(centerPos);\r\n    if (distFromCenter > radius - bullet.radius / 2) {\r\n      destroy(bullet);\r\n    }\r\n  });\r\n\r\n  // спавним туррель\r\n  spawnTurretAR(vec2(center().x, 150));\r\n  spawnTurretAR(vec2(center().x, 200), { bulletCount: 24, bulletSpeed: 200 });\r\n};\r\n","import kaplay from \"kaplay\";\r\nimport { fullscreenHandler } from \"./utils/fullscreen\";\r\nimport { GAME_WIDTH, GAME_HEIGHT, COLORS } from \"./config.js\";\r\n\r\nimport App from \"./app.js\";\r\nimport { test_scene } from \"./scenes/testing_scene.js\";\r\n\r\nconst k = kaplay({\r\n  background: [COLORS.background],\r\n  width: GAME_WIDTH,\r\n  height: GAME_HEIGHT,\r\n  scale: 1,\r\n  pixelated: true,\r\n});\r\n\r\nfullscreenHandler(k);\r\n\r\nloadFont(\"Tiny\", \"./fonts/Tiny5-Regular.ttf\");\r\n\r\nApp.init(k);\r\n\r\nApp.addScene(\"test\", test_scene);\r\nApp.startScene(\"test\");\r\n","import { COLORS } from \"../config\";\r\n\r\nconst body = document.querySelector(\"body\");\r\n\r\nbody.style.backgroundColor = rgb(COLORS.background);\r\n"],"names":["resizeGame","kaplay","gameCanvas","winWidth","winHeight","scaleX","scaleY","scale","goFullscreen","canvas","fullscreenHandler","e","GAME_WIDTH","GAME_HEIGHT","COLORS","App","kaplayInstance","name","sceneFunc","spawnTurretAR","position","options","bulletCount","bulletSpeed","damage","shootInterval","bulletColor","size","turret","shootCircle","i","angle","dir","setupBulletLogic","destroyBulletFunc","b","bullet","player","IMPULSE_FORCE","DASH_COOLDOWN","initDashAbility","dashAbility","hasDashed","MAX_HEALTH","SPEED","HERO_COLOR","DRAG","spawnPlayer","frames","playerSprite","moveHandler","dirX","dirY","test_scene","PLAYER_START_POS","centerPos","radius","halfRadiusPlayerModel","k","body"],"mappings":"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"}