import{h as E}from"./kaplay-CpR_OpMc.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function a(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(e){if(e.ep)return;e.ep=!0;const s=a(e);fetch(e.href,s)}})();function T(r){const t=document.querySelector("canvas"),a=window.innerWidth,o=window.innerHeight,e=Math.floor(a/r.width),s=Math.floor(o/r.height),c=Math.max(1,Math.min(e,s));t.style.width=r.width*c+"px",t.style.height=r.height*c+"px",t.style.imageRendering="pixelated",t.style.position="absolute",t.style.top="50%",t.style.left="50%",t.style.transform="translate(-50%, -50%)"}function F(){const r=document.querySelector("canvas");r.requestFullscreen?r.requestFullscreen():r.webkitRequestFullscreen&&r.webkitRequestFullscreen()}function O(r){window.addEventListener("resize",T(r)),window.addEventListener("load",T(r)),document.addEventListener("keydown",t=>{t.key==="f"&&F()})}const H=800,_=800,U={foreground:[237,242,226]},f={background:[34,42,61],foreground:[237,242,226]};function D(r){f.foreground=r,get("*").map(a=>{a.color&&(a.color=Color.fromArray(r)),a.outline&&(a.outline.color=Color.fromArray(r))})}const w={kaplayInstance:null,currentScene:null,init(r){this.kaplayInstance=r},addScene(r,t){if(!this.kaplayInstance){console.error("Kaplay instance не инициализирован");return}this.kaplayInstance.scene(r,t)},startScene(r){if(!this.kaplayInstance){console.error("Kaplay instance не инициализирован");return}this.currentScene=r,this.kaplayInstance.go(r)}},g={size:10,speed:200,moveInterval:1.5,damage:1,aggroRange:200,travelRange:200,hp:1,deathPartsCount:50,deathPartsSpeed:[300,10],deathPartsLife:.4,deathShake:2,deathScore:10};function q(r,t,a,o={}){const{size:e=g.size,speed:s=g.speed,moveInterval:c=g.moveInterval,damage:l=g.damage,aggroRange:m=g.aggroRange,travelRange:n=g.travelRange,hp:i=g.hp,deathPartsCount:d=g.deathPartsCount,deathPartsSpeed:y=g.deathPartsSpeed,deathPartsLife:u=g.deathPartsLife,deathShake:x=g.deathShake,deathScore:b=g.deathScore}=o;let v=r;const p=add([circle(e),pos(r),color(f.foreground),area(),body(),health(i),anchor("center"),"enemy","spider",{damage:l,speed:s,size:e}]);function C(){const S=get("player")[0];if(S){const k=p.pos.dist(S.pos);if(console.log(S.width),k<m&&k>S.width+e){v=vec2(S.pos.x,S.pos.y),p.moveTo(v,s);return}}v=R(),v.dist(t)>a-e&&(v=center())}function R(){return vec2(p.pos.x+rand(-n,n),p.pos.y+rand(-n,n))}function z(){p.moveTo(v,s)}return loop(c,()=>{C()}),p.onUpdate(()=>{z()}),p.onDeath(()=>{add([pos(p.pos),particles({max:d,speed:y,angle:[0,360],angularVelocity:[45,90],lifeTime:[u,u],colors:[rgb(f.foreground)],texture:getSprite("deathParticlies").data.tex,quads:[getSprite("deathParticlies").data.frames[0]]},{lifetime:u,rate:0,direction:0,spread:180})]).emit(d),shake(x),destroy(p),get("gameManager")[0].addScore(b)}),p}function K(){onCollide("spider","player",(r,t)=>{t.hurt(r.damage)})}async function X(){await loadSprite("deathParticlies","./sprites/dust.png")}const h={bulletCount:12,bulletSpeed:150,damage:1,shootInterval:2,size:24,bulletSize:6,deathPartsCount:150,deathPartsSpeed:[300,10],deathPartsLife:.4,deathShake:3,deathScore:30};function Y(r,t={}){const{bulletCount:a=h.bulletCount,bulletSpeed:o=h.bulletSpeed,damage:e=h.damage,shootInterval:s=h.shootInterval,size:c=h.size,bulletSize:l=h.bulletSize,deathPartsCount:m=h.deathPartsCount,deathPartsSpeed:n=h.deathPartsSpeed,deathPartsLife:i=h.deathPartsLife,deathShake:d=h.deathShake,deathScore:y=h.deathScore}=t,u=add([rect(c,c),pos(r),area(),body(),health(1),color(f.foreground),anchor("center"),"enemy",{bulletCount:a,bulletSpeed:o,damage:e,shootInterval:s}]);function x(){for(let v=0;v<u.bulletCount;v++){const p=v/u.bulletCount*Math.PI*2,C=vec2(Math.cos(p),Math.sin(p));add([circle(l),pos(u.pos),color(f.foreground),area(),"bullet",{dir:C,speed:u.bulletSpeed,damage:u.damage}])}}const b=loop(u.shootInterval,()=>{x()});return u.onDeath(()=>{add([pos(u.pos),particles({max:m,speed:n,angle:[0,360],angularVelocity:[45,90],lifeTime:[i,i],colors:[rgb(f.foreground)],texture:getSprite("deathParticlies").data.tex,quads:[getSprite("deathParticlies").data.frames[0]]},{lifetime:i,rate:0,direction:0,spread:180})]).emit(m),shake(d),b.cancel(),destroy(u),get("gameManager")[0].addScore(y)}),u}function G(r){onUpdate("bullet",t=>{t.move(t.dir.scale(t.speed)),r(t)}),onCollide("bullet","player",(t,a)=>{destroy(t),a.hurt(t.damage)})}function N(r,t,a){const o=add([timer(),{score:0,difficulty:1,spawnInterval:3,events:{}},"gameManager"]);o.addScore=n=>{o.score+=n,e(),m("scoreChanged",o.score)};function e(){o.difficulty=1+Math.floor(o.score/50),o.spawnInterval=Math.max(.5,3-o.difficulty*.2)}function s(){const n=c(),i=l(t,a);n==="spider"&&q(i,t,a,{speed:g.speed+o.difficulty*5}),n==="turret"&&Y(i,{bulletCount:h.bulletCount+o.difficulty/3,bulletSpeed:h.bulletSpeed+o.difficulty,bulletSize:h.bulletSize+o.difficulty/3})}function c(){return o.difficulty<3||Math.random()<.7?"spider":"turret"}function l(n,i){let d,y=0;do{const u=Math.random()*Math.PI*2,x=Math.sqrt(Math.random())*i;if(d=vec2(n.x+Math.cos(u)*x,n.y+Math.sin(u)*x),y++,y>100)break}while(d.dist(r.pos)<150);return d}function m(n,i){const d=o.events[n];d&&d.forEach(y=>y(i))}return o.onScoreChange=n=>{o.events.scoreChanged||(o.events.scoreChanged=[]),o.events.scoreChanged.push(n)},o.loop(o.spawnInterval,s),o}const I={c:null,async init(){await loadSprite("crosshair","./sprites/crosshair.png"),this.c=add([sprite("crosshair"),pos(center()),color(f.foreground),anchor("center"),"cursor"]),this.c.use(shader("newTint",()=>({r:f.foreground.at(0)/255,g:f.foreground.at(1)/255,b:f.foreground.at(2)/255}))),setCursor("none"),onUpdate("cursor",r=>{r.pos=mousePos()})},getCursorPos(){return this.c?vec2(this.c.pos):null}},V=1.5;async function W(r){const t=add([timer()]);t.damage=1,t.maxDist=150,t.speed=800;let a=!1,o=null,e=null;return t.Attack=()=>{a!=!0&&(a=!0,t.wait(V,()=>{a=!1}),e=t.getAttackDir(),o=t.getAttackPos())},t.getAttackDir=()=>{const s=r.pos;return I.getCursorPos().sub(s).unit()},t.getAttackPos=()=>vec2(r.pos.x+e.x*t.maxDist,r.pos.y+e.y*t.maxDist),onMousePress("left",()=>{t.Attack()}),t.onUpdate(()=>{o!=null&&(r.setInv(!1),r.canMove=!1,r.moveTo(o,t.speed),r.getCollisions()[0]&&r.getCollisions().map(c=>{if(c.target.tags.includes("enemy")){o=null,r.canMove=!0,c.target.hurt();return}}),r.setInvTime(.1),o!=null&&o.x.toFixed(0)==r.pos.x.toFixed(0)&&o.y.toFixed(0)==r.pos.y.toFixed(0)&&(o=null,r.canMove=!0))}),t}const P=5,M=300,A=.3,B=async r=>{let t=vec2(8,3),a=!0;loadSprite("hero","./sprites/all.png",{sliceX:t.x,sliceY:t.y,anims:{afk:0,idle:{from:0,to:7,loop:!0},walk:{from:8,to:14,loop:!0}}});const o=await getSprite("hero"),e=add([sprite(o),health(P,P),pos(r),color(f.foreground),area({shape:new Polygon([vec2(-18,12),vec2(10,12),vec2(10,-20),vec2(-18,-20)])}),body(),anchor(vec2(.2,.5)),timer(),{maxHeath:P,health:P,speed:M,invAfterHurt:A},"player"]);e.use(shader("playerShader",()=>({r:e.color.r/255,g:e.color.g/255,b:e.color.b/255,h:596+(1-e.hp()/e.maxHP())*1452,texSize:vec2(o.tex.width,o.tex.height),frameOffset:vec2(o.frames[e.frame].x,o.frames[e.frame].y),frameSize:vec2(o.frames[e.frame].w,o.frames[e.frame].h)}))),onKeyPress("space",()=>{get("bullet").map(i=>{i.radius=i.radius*3})}),e.canMove=!0,e.isMoving=!1;const s={KeyW:"up",KeyA:"left",KeyS:"down",KeyD:"right"},c={};document.addEventListener("keydown",n=>{const i=s[n.code];i&&(c[i]=!0)}),document.addEventListener("keyup",n=>{const i=s[n.code];i&&(c[i]=!1)});function l(n){return!!c[n]}const m=()=>{if(!e.canMove)return;let n=0,i=0;l("left")&&(n-=1),l("right")&&(n+=1),l("up")&&(i-=1),l("down")&&(i+=1);let d=vec2(n,i);d.len()>0&&(d=d.unit(),e.lastDirection=d,e.move(d.x*M,d.y*M),e.flipX=d.x<0)};return W(e),e.onUpdate(()=>{if(m(),(l("left")||l("right")||l("up")||l("down"))&&e.canMove){if(e.isMoving=!0,e.curAnim()=="walk")return;e.play("walk")}else{if(e.isMoving=!1,e.curAnim()=="idle")return;e.play("afk")}}),e.hurt=n=>{a&&(e.setInvTime(A),e.setHP(e.hp()-n),e.trigger("hurt"))},e.setInvTime=n=>{a=!1,e.wait(n,()=>{a=!0})},e.setInv=n=>{a=n},e.onHurt(()=>{e.hp()<=0||(shake(4),D([156,23,59]),e.wait(.3,()=>{D(U.foreground)}))}),e.onDeath(()=>{w.startScene("death")}),e},$=async()=>{const r=vec2(center().x,center().y*1.7),t=await B(r);await I.init();const a=vec2(width()/2,height()/2),o=width()/2-16,e=36;add([pos(a),circle(o,{fill:!1}),outline(2,Color.fromArray(f.foreground)),"border"]),t.onUpdate(()=>{if(t.pos.dist(a)>o-e){const m=t.pos.sub(a).unit();t.pos=a.add(m.scale(o-e))}}),G(l=>{l.pos.dist(a)>o-l.radius&&destroy(l)}),await X(),K();const s=N(t,a,o),c=add([text(get("gameManager")[0].score,{font:"Tiny"}),pos(20,20),layer("ui"),color(f.foreground)]);s.onScoreChange(()=>{c.text=s.score})},J=async r=>{const t=vec2(width()/2,height()/2),a=width()/2-16;add([pos(t),circle(a,{fill:!1}),outline(2,Color.fromArray(f.foreground))]);const o=add([text(`You are dead!
Press space to restart`,{font:"Tiny",align:"center"}),color(f.foreground),pos(center()),anchor("center"),layer("ui"),animate()]);return onKeyPress("space",()=>{w.startScene("test")}),o.animate("scale",[0,1],{duration:.5,loops:1}),r};function Q(){loadShader("playerShader",null,`
  precision mediump float;

  uniform float r;
  uniform float g;
  uniform float b;
  uniform float h;
  uniform vec2 texSize;
  uniform vec2 frameOffset;
  uniform vec2 frameSize;

  vec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {
      vec4 c = texture2D(tex, uv);

      if (c.a < 0.01) {
          return c;
      }

      vec2 offsetX = vec2(1.0 / texSize.x, 0.0);
      vec2 offsetY = vec2(0.0, 1.0 / texSize.y);

      float alphaUp    = texture2D(tex, uv + offsetY).a;
      float alphaDown  = texture2D(tex, uv - offsetY).a;
      float alphaLeft  = texture2D(tex, uv - offsetX).a;
      float alphaRight = texture2D(tex, uv + offsetX).a;

      if (alphaUp < 0.01 || alphaDown < 0.01 || alphaLeft < 0.01 || alphaRight < 0.01) {
          return vec4(r, g, b, c.a);
      }

      vec2 pixelCoord = uv * texSize;
      vec2 localPixel = pixelCoord - (frameOffset * texSize);
      vec2 localUV = localPixel / frameSize; // 0..1 по фрейму

      if (localUV.y <= h) {
          return vec4(1.0, 0.0, 0.0, 0.0);
      }

      return vec4(r, g, b, c.a);
      }
      `),loadShader("newTint",null,`
    precision mediump float;

    uniform float r;
    uniform float g;
    uniform float b;

    vec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {
      vec4 c = def_frag();

      return vec4(r, g, b, c.a);
    }
    `)}const L=E({background:[f.background],width:H,height:_,scale:1,pixelated:!0});O(L);loadFont("Tiny","./fonts/Tiny5-Regular.ttf");Q();w.init(L);w.addScene("test",$);w.addScene("death",J);w.startScene("test");const Z=document.querySelector("body");Z.style.backgroundColor=rgb(f.background);
//# sourceMappingURL=index-CC-VKruD.js.map
